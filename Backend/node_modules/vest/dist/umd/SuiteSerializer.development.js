(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('vestjs-runtime')) :
  typeof define === 'function' && define.amd ? define(['exports', 'vestjs-runtime'], factory) :
  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.SuiteSerializer = {}, global["vestjs-runtime"]));
})(this, (function (exports, vestjsRuntime) { 'use strict';

  class SuiteSerializer {
      static serialize(suite) {
          const dump = Object.assign(Object.assign({}, suite.dump()), { output: undefined });
          return vestjsRuntime.IsolateSerializer.serialize(dump);
      }
      static deserialize(serialized) {
          return vestjsRuntime.IsolateSerializer.deserialize(serialized);
      }
      static resume(suite, root) {
          const suiteRoot = SuiteSerializer.deserialize(root);
          suite.resume(suiteRoot);
      }
  }

  exports.SuiteSerializer = SuiteSerializer;

}));
//# sourceMappingURL=SuiteSerializer.development.js.map
