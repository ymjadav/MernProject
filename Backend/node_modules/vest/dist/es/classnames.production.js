import{invariant as e,hasOwnProperty as t,isNullish as n,isPositive as s,isFunction as i}from"vest-utils";import{suiteSelectors as o}from"vest";var r;function a(a,E={}){const u=function(i){e(i&&t(i,"valid"),r.PARSER_EXPECT_RESULT_OBJECT);const a=o(i),E={},u={invalid:a.hasErrors,pending:a.isPending,tested:function(e){return n(e)?s(i.testCount):t(E,e)?E[e]:(c(e),u.tested(e))},untested:function(e){return!(s(i.testCount)&&u.tested(e))},valid:a.isValid,warning:a.hasWarnings};return u;function c(e){E[e]=t(i.tests,e)&&s(i.tests[e].testCount)}}(a);return function(e){const t=[];for(const n in E){const s=n;i(u[s])&&u[s](e)&&t.push(E[s])}return t.join(" ")}}!function(e){e.HOOK_CALLED_OUTSIDE="hook called outside of a running suite.",e.EXPECTED_VEST_TEST="Expected value to be an instance of IsolateTest",e.FIELD_NAME_REQUIRED="Field name must be passed",e.SUITE_MUST_BE_INITIALIZED_WITH_FUNCTION="Suite must be initialized with a function",e.PROMISIFY_REQUIRE_FUNCTION="Vest.Promisify must be called with a function",e.PARSER_EXPECT_RESULT_OBJECT="Vest parser: expected argument at position 0 to be Vest's result object.",e.WARN_MUST_BE_CALLED_FROM_TEST="Warn must be called from within the body of a test function",e.EACH_CALLBACK_MUST_BE_A_FUNCTION="Each must be called with a function",e.INVALID_PARAM_PASSED_TO_FUNCTION='Incompatible params passed to {fn_name} function. "{param}" must be of type {expected}',e.TESTS_CALLED_IN_DIFFERENT_ORDER='Vest Critical Error: Tests called in different order than previous run.\n    expected: {fieldName}\n    received: {prevName}\n    This can happen on one of two reasons:\n    1. You\'re using if/else statements to conditionally select tests. Instead, use "skipWhen".\n    2. You are iterating over a list of tests, and their order changed. Use "each" and a custom key prop so that Vest retains their state.',e.UNEXPECTED_TEST_REGISTRATION_ERROR="Unexpected error encountered during test registration.\n      Please report this issue to Vest's Github repository.\n      Test Object: {testObject}.\n      Error: {error}.",e.UNEXPECTED_TEST_RUN_ERROR="Unexpected error encountered during test run. Please report this issue to Vest's Github repository.\n      Test Object: {testObject}.",e.INCLUDE_SELF="Trying to call include.when on the same field."}(r||(r={}));export{a as default};
//# sourceMappingURL=classnames.production.js.map
