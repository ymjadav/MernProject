{"version":3,"file":"compounds.development.js","sources":["../../src/lib/ruleReturn.ts","../../src/lib/runLazyRule.ts","../../src/plugins/compounds/allOf.ts","../../src/plugins/compounds/anyOf.ts","../../src/plugins/compounds/noneOf.ts","../../src/rules/equals.ts","../../src/plugins/compounds/oneOf.ts","../../src/exports/compounds.ts"],"sourcesContent":["import type { Stringable } from 'vest-utils';\nimport { defaultTo } from 'vest-utils';\n\nexport default function ruleReturn(\n  pass: boolean,\n  message?: string\n): RuleDetailedResult {\n  const output: RuleDetailedResult = { pass };\n\n  if (message) {\n    output.message = message;\n  }\n\n  return output;\n}\n\nexport function failing(): RuleDetailedResult {\n  return ruleReturn(false);\n}\n\nexport function passing(): RuleDetailedResult {\n  return ruleReturn(true);\n}\n\nexport function defaultToFailing(\n  callback: (...args: any[]) => RuleDetailedResult\n): RuleDetailedResult {\n  return defaultTo(callback, failing());\n}\n\nexport function defaultToPassing(\n  callback: (...args: any[]) => RuleDetailedResult\n): RuleDetailedResult {\n  return defaultTo(callback, passing());\n}\n\nexport type RuleReturn =\n  | boolean\n  | {\n      pass: boolean;\n      message?: Stringable;\n    };\n\nexport type RuleDetailedResult = { pass: boolean; message?: string };\n","import type { LazyRuleRunners } from 'genEnforceLazy';\nimport type { RuleDetailedResult } from 'ruleReturn';\nimport * as ruleReturn from 'ruleReturn';\n\nexport default function runLazyRule(\n  lazyRule: LazyRuleRunners,\n  currentValue: any\n): RuleDetailedResult {\n  try {\n    return lazyRule.run(currentValue);\n  } catch {\n    return ruleReturn.failing();\n  }\n}\n","import { mapFirst } from 'vest-utils';\n\nimport type { Lazy } from 'genEnforceLazy';\nimport * as ruleReturn from 'ruleReturn';\nimport type { RuleDetailedResult } from 'ruleReturn';\nimport runLazyRule from 'runLazyRule';\n\nexport function allOf(value: unknown, ...rules: Lazy[]): RuleDetailedResult {\n  return ruleReturn.defaultToPassing(\n    mapFirst(rules, (rule, breakout) => {\n      const res = runLazyRule(rule, value);\n      breakout(!res.pass, res);\n    })\n  );\n}\n","import { mapFirst } from 'vest-utils';\n\nimport type { Lazy } from 'genEnforceLazy';\nimport * as ruleReturn from 'ruleReturn';\nimport type { RuleDetailedResult } from 'ruleReturn';\nimport runLazyRule from 'runLazyRule';\n\nexport function anyOf(value: unknown, ...rules: Lazy[]): RuleDetailedResult {\n  return ruleReturn.defaultToFailing(\n    mapFirst(rules, (rule, breakout) => {\n      const res = runLazyRule(rule, value);\n      breakout(res.pass, res);\n    })\n  );\n}\n","import { mapFirst } from 'vest-utils';\n\nimport type { Lazy } from 'genEnforceLazy';\nimport type { RuleDetailedResult } from 'ruleReturn';\nimport * as ruleReturn from 'ruleReturn';\nimport runLazyRule from 'runLazyRule';\n\nexport function noneOf(value: unknown, ...rules: Lazy[]): RuleDetailedResult {\n  return ruleReturn.defaultToPassing(\n    mapFirst(rules, (rule, breakout) => {\n      const res = runLazyRule(rule, value);\n\n      breakout(res.pass, ruleReturn.failing());\n    })\n  );\n}\n","import { bindNot } from 'vest-utils';\n\nexport function equals(value: unknown, arg1: unknown): boolean {\n  return value === arg1;\n}\n\nexport const notEquals = bindNot(equals);\n","import { greaterThan } from 'vest-utils';\n\nimport { equals } from 'equals';\nimport type { Lazy } from 'genEnforceLazy';\nimport ruleReturn, { RuleDetailedResult } from 'ruleReturn';\nimport runLazyRule from 'runLazyRule';\n\nconst REQUIRED_COUNT = 1;\n\nexport function oneOf(value: unknown, ...rules: Lazy[]): RuleDetailedResult {\n  let passingCount = 0;\n  rules.some(rule => {\n    const res = runLazyRule(rule, value);\n\n    if (res.pass) {\n      passingCount++;\n    }\n\n    if (greaterThan(passingCount, REQUIRED_COUNT)) {\n      return false;\n    }\n  });\n\n  return ruleReturn(equals(passingCount, REQUIRED_COUNT));\n}\n","import { enforce } from 'n4s';\n\nimport { allOf } from 'allOf';\nimport { anyOf } from 'anyOf';\nimport { EnforceCustomMatcher } from 'enforceUtilityTypes';\nimport { Lazy } from 'genEnforceLazy';\nimport { noneOf } from 'noneOf';\nimport { oneOf } from 'oneOf';\nimport { RuleDetailedResult } from 'ruleReturn';\n\nenforce.extend({ allOf, anyOf, noneOf, oneOf });\n\ntype EnforceCompoundRule = (\n  value: unknown,\n  ...rules: Lazy[]\n) => RuleDetailedResult;\n\n/* eslint-disable @typescript-eslint/no-namespace */\ndeclare global {\n  namespace n4s {\n    interface EnforceCustomMatchers<R> {\n      allOf: EnforceCustomMatcher<EnforceCompoundRule, R>;\n      anyOf: EnforceCustomMatcher<EnforceCompoundRule, R>;\n      noneOf: EnforceCustomMatcher<EnforceCompoundRule, R>;\n      oneOf: EnforceCustomMatcher<EnforceCompoundRule, R>;\n    }\n  }\n}\n"],"names":["defaultTo","ruleReturn.failing","ruleReturn.defaultToPassing","mapFirst","ruleReturn.defaultToFailing","bindNot","greaterThan","enforce"],"mappings":"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"}