!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("vest-utils"),require("vest-utils/minifyObject")):"function"==typeof define&&define.amd?define(["exports","vest-utils","vest-utils/minifyObject"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).IsolateSerializer={},e["vest-utils"],e.minifyObject)}(this,(function(e,t,i){"use strict";var s,n;!function(e){e.NO_ACTIVE_ISOLATE="Not within an active isolate",e.UNABLE_TO_PICK_NEXT_ISOLATE="Unable to pick next isolate. This is a bug, please report it to the Vest maintainers.",e.ENCOUNTERED_THE_SAME_KEY_TWICE='Encountered the same key "{key}" twice. This may lead to inconsistent or overriding of results.',e.INVALID_ISOLATE_CANNOT_PARSE="Invalid isolate was passed to IsolateSerializer. Cannot proceed."}(s||(s={})),function(e){e.Type="$type",e.Keys="keys",e.Key="key",e.Parent="parent",e.Data="data",e.AllowReorder="allowReorder",e.Status="status",e.AbortController="abortController",e.Children="children"}(n||(n={}));const r=new Set([n.AbortController,n.Parent,n.Keys]);class a{static setParent(e,t){return e.parent=t,e}static saveOutput(e,t){return e.output=t,e}static setKey(e,t){return e.key=t,e}static addChild(e,i){var s;t.invariant(e),e.children=null!==(s=e.children)&&void 0!==s?s:[],e.children.push(i),a.setParent(i,e)}static removeChild(e,t){var i,s;e.children=null!==(s=null===(i=e.children)||void 0===i?void 0:i.filter((e=>e!==t)))&&void 0!==s?s:null}static addChildKey(e,i,s){var n;t.invariant(e),e.keys=null!==(n=e.keys)&&void 0!==n?n:{},e.keys[i]=s}static slice(e,i){t.isNullish(e.children)||(e.children.length=i)}static setData(e,t){e.data=t}static abort(e,i){t.isNullish(e.abortController)||e.abortController.abort(i)}}class l{static deserialize(e){const s=t.isStringValue(e)?JSON.parse(e):Object.assign({},e),n=i.expandObject(...s);l.validateIsolate(n);const r=[n];for(;r.length;){const e=r.shift();if(!e)continue;const t=e.children;t&&(e.children=t.map((t=>{var i;const s=Object.assign({},t);a.setParent(s,e),r.push(s);const n=s.key;return n&&(e.keys=null!==(i=e.keys)&&void 0!==i?i:{},e.keys[n]=s),s})))}return n}static serialize(e){if(t.isNullish(e))return"";const s=i.minifyObject(e,r);return JSON.stringify(s)}static validateIsolate(e){t.invariant(t.hasOwnProperty(e,n.Type),t.text(s.INVALID_ISOLATE_CANNOT_PARSE))}}e.IsolateSerializer=l}));
//# sourceMappingURL=IsolateSerializer.production.js.map
